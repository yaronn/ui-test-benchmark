{
  "name": "spooky",
  "version": "0.2.4",
  "author": {
    "name": "Lon Ingram",
    "email": "lon@waterfallmobile.com"
  },
  "description": "Drive CasperJS from Node.js",
  "repository": {
    "type": "git",
    "url": "http://github.com/WaterfallEngineering/SpookyJS.git"
  },
  "main": "./lib/spooky.js",
  "dependencies": {
    "underscore": "1.3.x",
    "async": "0.1.x",
    "tiny-jsonrpc": "0.2.x",
    "carrier": "0.1.x",
    "duplexer": "0.0.x",
    "readable-stream": "~1.0.2"
  },
  "devDependencies": {
    "mocha": "1.3.x",
    "expect.js": "0.1.x",
    "cucumber": "*",
    "http-server": "0.5.x"
  },
  "license": "MIT",
  "readme": "# SpookyJS\n\nDrive [CasperJS](http://casperjs.org/) from Node.js.\n\n**Note**: If you are simply looking to control Phantom from Node and don't need\nCasper's API, have a look at [PhantomJS\n1.8](http://phantomjs.org/release-1.8.html), which has native WebDriver support.\n\n## Installation\n\n### Prerequisites\n\n* [Node.js](http://nodejs.org) >= 0.8\n* [PhantomJS](http://phantomjs.org/) >= 1.9\n* [CasperJS](http://casperjs.org/) >= 1.0\n\nSpookyJS is available from npm.\n\n``` shell\n$ npm install spooky\n```\n\n## Usage\n\nRead about how Spooky works in the\n[documentation](https://github.com/WaterfallEngineering/SpookyJS/wiki/Introduction).\nAPI documentation and examples coming soon.\n\n### Quickstart\n\n``` javascript\ntry {\n    var Spooky = require('spooky');\n} catch (e) {\n    var Spooky = require('../lib/spooky');\n}\n\nvar spooky = new Spooky({\n        child: {\n            transport: 'http'\n        },\n        casper: {\n            logLevel: 'debug',\n            verbose: true\n        }\n    }, function (err) {\n        if (err) {\n            e = new Error('Failed to initialize SpookyJS');\n            e.details = err;\n            throw e;\n        }\n\n        spooky.start(\n            'http://en.wikipedia.org/wiki/Spooky_the_Tuff_Little_Ghost');\n        spooky.then(function () {\n            this.emit('hello', 'Hello, from ' + this.evaluate(function () {\n                return document.title;\n            }));\n        });\n        spooky.run();\n    });\n\nspooky.on('error', function (e, stack) {\n    console.error(e);\n\n    if (stack) {\n        console.log(stack);\n    }\n});\n\n/*\n// Uncomment this block to see all of the things Casper has to say.\n// There are a lot.\n// He has opinions.\nspooky.on('console', function (line) {\n    console.log(line);\n});\n*/\n\nspooky.on('hello', function (greeting) {\n    console.log(greeting);\n});\n\nspooky.on('log', function (log) {\n    if (log.space === 'remote') {\n        console.log(log.message.replace(/ \\- .*/, ''));\n    }\n});\n```\n\nA minimal example can be found in the repo under `examples`. Run it like this in\na cloned repo:\n\n``` shell\n$ node examples/hello.js\n```\n\nRun it like this if you installed Spooky via npm:\n\n``` shell\n$ node node_modules/spooky/examples/hello.js\n```\n\nA small example [Cucumber.js](https://github.com/cucumber/cucumber-js/) test suite can be found in the repo under `examples/cucumber`. To run the suite:\n\n``` shell\n$ make cucumber.js\n```\n\nYou may change the port that the fixture server runs on by setting the `TEST_PORT` make parameter.\n\nSee the tests for an example of how to use SpookyJS with [Mocha](http://visionmedia.github.com/mocha). \n\n## Known issues\n\nSpooky's `stdio` transport reportedly does not work on Windows and Ubuntu.\n\nThe `http` transport hangs when using Phantom 1.8 with older versions of\nCasperJS.\n\n## Development\n\n### Running the tests\n\nSpookyJS includes a suite of unit tests, driven by [Mocha](http://visionmedia.github.com/mocha). To run the tests:\n\n``` shell\n$ make test\n```\n\nThe following make parameters are supported (defaults are in parentheses):\n\n* `TEST_REPORTER` the [Mocha reporter](http://visionmedia.github.com/mocha/#reporters) to use (dot)\n* `TEST_PORT` the port to run the fixture web server on (8080)\n* `TEST_TIMEOUT` threshold in ms to timeout a test (4000)\n* `TEST_SLOW` threshold in ms to say a test is slow (2000)\n* `TEST_ARGS` Additional [arguments](http://visionmedia.github.com/mocha/#usage) to pass through to Mocha\n* `TEST_DEBUG` Print debug logging to the console (false)\n* `TEST_TRANSPORT` the Spooky transport to use when running the tests (stdio)\n\n## Release Notes\n\n### 0.2.4\n\n- support CasperJS v1.0.3+ (thanks @rumca and @ucarbehlul)\n- use a spec-compliant implementation of `Function.prototype.bind`\n- add `options.child.spawnOptions`: its value is passed thru as the `options`\n  argument to `child_process.spawn`\n- serialize function and function tuple values in `options.casper`\n- teach test to throw if Spooky emits an error\n- implement `withFrame`, `withPopup`, and `waitForPopup` (thanks @asciidisco)\n- use HTTP transport by default in hello example\n- fix invalid argument order in `RequestStream._onError` (Dmitry Menshikov)\n\n### 0.2.3\n\n- Allow casper restart in stdio server (@kpdecker)\n- Fix #51 by correctly inheriting from EventEmitter (thanks @tomchentw)\n- Move emit to a module and provide emitting console module\n\n### 0.2.2\n\n- Node 0.10 support\n- use Phantom 1.9's `system.stdin` for stdio transport\n- add `phantom.onError` handler. Spooky now emits an error event and exits\n  non-zero if an unhandled JS error occurs in the Phantom context.\n- add `thenClick` method (@andresgottlieb)\n- fix #28\n\n## License\n\nSpookyJS is made available under the [MIT License](http://opensource.org/licenses/mit-license.php).\n\n## Acknowledgements and Attribution\n\nThe image `tests/fixtures/fail-road.jpeg` is the work [Fail\nRoad](http://www.flickr.com/photos/fireflythegreat/2845637227/) and is\ncopyright (c) 2007\n[fireflythegreat](http://www.flickr.com/photos/fireflythegreat/) and made\navailable under an [Attribution 2.0\nGeneric](http://creativecommons.org/licenses/by/2.0/deed.en) license.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/WaterfallEngineering/SpookyJS/issues"
  },
  "_id": "spooky@0.2.4",
  "dist": {
    "shasum": "3b3c922bdf330d8202a1e7998f6b062d80bd42f4"
  },
  "_from": "spooky@",
  "_resolved": "http://registry.npmjs.org/spooky/-/spooky-0.2.4.tgz"
}
